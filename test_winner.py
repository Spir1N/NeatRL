import pickle
import neat
import gymnasium as gym
import numpy as np
import imageio

# –ó–∞–≥—Ä—É–∑–∫–∞ winner'–∞
with open("winner_genomev.pkl", "rb") as f:
    winner = pickle.load(f)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ NEAT
config_path = "config-feedforward.txt"
config = neat.Config(
    neat.DefaultGenome,
    neat.DefaultReproduction,
    neat.DefaultSpeciesSet,
    neat.DefaultStagnation,
    config_path
)

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ä–µ–¥—ã —Å –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π
env = gym.make("BipedalWalker-v3", render_mode="rgb_array") 

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –∏–∑ –≥–µ–Ω–æ–º–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
net = neat.nn.FeedForwardNetwork.create(winner, config)

frames = []

obs, _ = env.reset()
done = False
total_reward = 0.0

while not done:
    action = net.activate(obs)
    obs, reward, terminated, truncated, _ = env.step(action)
    frame = env.render()
    frames.append(frame)
    done = terminated or truncated
    total_reward += reward

imageio.mimsave("agent_run.gif", frames, fps=30)

print(f"üéØ –ò—Ç–æ–≥–æ–≤–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –∞–≥–µ–Ω—Ç–∞: {total_reward:.2f}")
env.close()
